<?php
/**
 * @file
 * Contains base function for module.
 */

/**
 * Implements hook_menu().
 */
function my_database_menu() {
  $items['my_database/insert'] = array(
    'title' => 'Page for insert data',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('my_database_insert_form'),
    'access arguments' => array('administer site configuration'),
  );
  $items['my_database'] = array(
    'title' => 'Table with data from data base',
    'page callback' => 'my_database_table_data_page',
    'access arguments' => array('administer site configuration'),
  );
  $items['my_database/%/delete'] = array(
    'title callback' => 'my_database_delete_page_title',
    'title arguments' => array(1),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('my_database_delete_form', 1),
    'access arguments' => array('administer site configuration'),
  );
  $items['my_database/%/update'] = array(
    'title callback' => 'my_database_update_page_title',
    'title arguments' => array(1),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('my_database_update_form', 1),
    'access arguments' => array('administer site configuration'),
  );
  return $items;
}

/**
 * Build form for insert data.
 */
function my_database_insert_form($form, $form_state) {
  $form = array();
  $form['number'] = array(
    '#title' => t('Number'),
    '#type' => 'textfield',
    '#maxlength' => 10,
    '#description' => t('Only numbers'),
    '#required' => TRUE,
  );
  $form['teaser'] = array(
    '#title' => t('Teaser'),
    '#type' => 'textfield',
    '#maxlength' => 150,
    '#required' => TRUE,
  );
  $form['text'] = array(
    '#title' => t('Text'),
    '#type' => 'textarea',
    '#required' => TRUE,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );
  return $form;
}

/**
 * Custom form validation.
 */
function my_database_insert_form_validate(&$form, &$form_state) {
  if (drupal_strlen($form_state['values']['number']) > 10) {
    form_set_error('number', t('Field "Number" must be less than 10 chars.'));
  }
  elseif (!ctype_digit($form_state['values']['number'])) {
    form_set_error('number', t('Field "Number" must contains an integer.'));
  }
  if (drupal_strlen($form_state['values']['teaser']) > 150) {
    form_set_error('teaser', t('Field "Teaser" must be less than 150 chars.'));
  }
}

/**
 * Inserting information into data base.
 */
function my_database_insert_form_submit($form, &$form_state) {
  $query = db_insert('custom_table')
    ->fields(array(
      'number' => $form_state['values']['number'],
      'teaser' => $form_state['values']['teaser'],
      'text' => $form_state['values']['text'],
    ))
    ->execute();
  if ($query) {
    drupal_set_message(t('Data has been successfully sent.'));
  }
  else {
    drupal_set_message(t("Data hasn't been sent."), 'error');
  } 
}

/**
 * Creates a table
 */
function my_database_table_data_page() {
  $header = array(t('ID'), t('Number'), t('Teaser'), t('Text'), t('Actions'));
  $rows = array();
  $query = db_select('custom_table')
    ->fields('custom_table', array('id', 'number', 'teaser', 'text'))
    ->execute();
  while ($value = $query->fetchAssoc()) {
    $rows[] = array(
      $value['id'],
      $value['number'],
      $value['teaser'],
      $value['text'],
      l(t('Delete'), "my_database/{$value['id']}/delete") . ' | ' .
      l(t('Update'), "my_database/{$value['id']}/update"),
    );
  }
  return theme('table', array('header' => $header, 'rows' => $rows));
}

// *******************************  DELETE  *******************************
/**
 *  Message with warning about item deleting.
 */
function my_database_delete_page_title($id) {
  $placeholders = array(':id' => $id);
  $number = db_query("SELECT number FROM custom_table WHERE id = :id", $placeholders)->fetchField();
  return t('Are you sure you want ot delete items with number @num?',
    array('@num' => $number));
}

/**
 *  Deleting form with Submit and Cancel buttons.
 */
function my_database_delete_form($form, $form_state) {
  $form = array();
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );
  $form['cancel'] = array(
    '#markup' => l(t('Cansel'), 'my_database'),
  );
  return $form;
}

/**
 *  Submitting a delete form. Process of deleting from data base.
 */
function my_database_delete_form_submit($form, &$form_state) {
  $id = $form_state['build_info']['args'][0];
  $result = db_delete('custom_table')
    ->condition('id', $id)
    ->execute();
  if ($result) {
    drupal_set_message(t('Record @id successfully removed.', array(
      '@id' => $id,
    )));
  }
  else {
    drupal_set_message(t('Record @id is undefined.', array(
      '@id' => $id,
      )),
      'warning');
  }
  $form_state['redirect'] = 'my_database';
}

// **************************  UPDATE  *******************************
/**
 *  Title of updating page.
 */
function my_database_update_page_title($id) {
  $placeholders = array(':id' => $id);
  $number = db_query("SELECT number FROM custom_table WHERE id = :id",
    $placeholders)->fetchField();
  if ($number) {
    return t('Edit item with number @num', array('@num' => $number));
  }
  else {
    return t('Id not found.');
  }
}

/**
 *  Updating form.
 */
function my_database_update_form($form, $form_state) {
  $form = array();
  $id = $form_state['build_info']['args'][0];
  $data = db_select('custom_table')
    ->condition('custom_table.id', $id)
    ->fields('custom_table')
    ->execute()
    ->fetchAssoc();

  $form['number'] = array(
    '#title' => t('Number'),
    '#type' => 'textfield',
    '#mexlength' => 10,
    '#description' => t('Only numbers'),
    '#required' => TRUE,
    '#default_value' => $data['number'],
  );
  $form['teaser'] = array(
    '#title' => t('Teaser'),
    '#type' => 'textfield',
    '#maxlength' => 150,
    '#required' => TRUE,
    '#default_value' => $data['teaser'],
  );
  $form['text'] = array(
    '#title' => t('Text'),
    '#type' => 'textarea',
    '#required' => TRUE,
    '#default_value' => $data['text'],
  );
  $form['actions'] = array('#type' => 'actions');
  $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );
  $form['actions']['cancel'] = array(
    '#markup' => l(t('Cancel'), 'my_database'),
  );

  $form['#validate'][] = 'my_database_insert_form_validate';
  return $form;
}

/**
 *  Udtading items in data base.
 */
function my_database_update_form_submit($form, &$form_state) {
  $id = $form_state['build_info']['args'][0];
  $values = $form_state['values'];

  $query = db_update('custom_table')->fields(array(
      'number' => $values['number'],
      'teaser' => $values['teaser'],
      'text' => $values['text'],
  ))
    ->condition('id', $id)
    ->execute();
  if ($query) {
    drupal_set_message(t('Data updated successfully'));
  }
  else {
    drupal_set_message(t('Data is not updated'), 'warning');
  }
  $form_state['redirect'] = 'my_database';
}
